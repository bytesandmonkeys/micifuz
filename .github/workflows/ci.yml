name: "Pull Request CI"
on:
  - pull_request
  - push
jobs:
  linux-validate-format:
    name: Linux - Validate format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
      - name: Build with Maven
        run: |
          mvn -fae -V -B verify -Pvets,authn,petshop,shelters -Dvalidate-format -DskipTests -DskipITs
  detect-modules-changes:
    name: Detect Modules in PR
    runs-on: ubuntu-latest
    needs: linux-validate-format
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - id: files
        uses: jitterbit/get-changed-files@v1
        continue-on-error: true
      - id: detect-changes
        run: |
          MODULES=$(find -name pom.xml | sed -e 's|pom.xml| |' | sed -e 's|./| |')
          CHANGED=""
          MODULES_ARG=""
          for module in $MODULES
          do
              if [[ "${{ steps.files.outputs.all }}" =~ ("$module") ]] ; then
                  CHANGED=$(echo $CHANGED" "$module)
              fi
          done
          MODULES_ARG="${CHANGED// /,}"
          echo "::set-output name=MODULES_ARG::${MODULES_ARG}"
    outputs:
      MODULES_ARG: ${{ steps.detect-changes.outputs.MODULES_ARG }}
  verify-micifuz-modules:
    name: Verify Micifuz - Changes
    runs-on: ubuntu-latest
    needs: detect-modules-changes
    env:
      MODULES_ARG: ${{ needs.detect-modules-changes.outputs.MODULES_ARG }}
    strategy:
      matrix:
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
      - name: Verification step
        run:  |
          MODULES_MAVEN_PARAM=""
          if [[ -n ${MODULES_ARG} ]]; then
            echo "Running modules: ${MODULES_ARG}"
            MODULES_MAVEN_PARAM="-pl backend/test-resources,backend/commons,${MODULES_ARG}"
          fi

          mvn -fae -V -B clean verify $MODULES_MAVEN_PARAM
